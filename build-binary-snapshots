
commit_snapshots_build () {

    LAUNCH_ARGS="$*"

    NAME="$1"
    if [ "${NAME}" = "" ]; then
        error "No name specified!"
    fi

    A_VERSION="$2"
    if [ "${A_VERSION}" = "" ]; then
        error "No version specified!"
    fi

    OS_VER="$3"
    if [ "${OS_VER}" = "" ]; then
        error "No OS version specified!"
    fi

    DESTINATION="$4"
    if [ "${DESTINATION}" = "" ]; then
        error "No destination path specified!"
    fi

    ARCH="$5"
    if [ "${ARCH}" = "" ]; then
        error "No architecture specified!"
    fi

    BBS_LOG="/var/log/messages"


    clean_before () {
        cd "/Jails/Shared/FreeBSD-${OS_VER}-${ARCH}"
        for unnec in /etc /tmp /dev /mnt /media /proc /COPYRIGHT /sys /var/mail /usr/home /var/mail /var/tmp /.profile /rescue /root; do
            ${FIND_BIN} ".${unnec}" -delete 2>> ${BBS_LOG} && \
            permnote "Removed dir: .${unnec}"
        done
    }


    compile_jails () {
        SHARED_DIR="/Shared"
        ${MKDIR_BIN} -p /var/.cache
        DEFAULT_ARCHIVE_EXT=".zfsx"
        BASE_SNAPSHOT="${NAME}-${OS_VER}-v${A_VERSION}-${ARCH}"
        permnote "Compiling snapshot: ${BASE_SNAPSHOT}"
        realpath="${SHARED_DIR}/FreeBSD-${OS_VER}-${ARCH}"

        LLD="/Software/Lld/bin/lld"
        if [ -x "${LLD}" ]; then
            permnote "Installing additional linker: $(distn "${LLD}")"
            ${INSTALL_BIN} -v "${LLD}" "${realpath}/usr/bin/ld.lld" >> "${BBS_LOG}" 2>> "${BBS_LOG}"
        fi

        GOLD="/Software/Gold/bin/ld.gold"
        GOLD_PLUGIN="/Software/Gold/lib/LLVMgold.so"
        if [ -x "${GOLD}" -a -x "${GOLD_PLUGIN}" ]; then
            permnote "Installing additional linker: $(distn "${GOLD}")"
            ${INSTALL_BIN} -v "${GOLD}" "${realpath}/usr/bin" >> "${BBS_LOG}" 2>> "${BBS_LOG}"
            ${INSTALL_BIN} -v "${GOLD_PLUGIN}" "${realpath}/usr/lib" >> "${BBS_LOG}" 2>> "${BBS_LOG}"
        fi

        # for file in ${GOLD}/lib/LLVMgold.so ${GOLD}/lib/libLTO.so; do
        #     ${INSTALL_BIN} -v "${file}" "${realpath}/usr/lib" >> "${BBS_LOG}" 2>> "${BBS_LOG}"
        # done
        # for file in $(${FIND_BIN} ${GOLD}/${TARGET_TRIPPLE}/bin -type f); do
        #     ${INSTALL_BIN} -v "${file}" "${realpath}/usr/bin" >> "${BBS_LOG}" 2>> "${BBS_LOG}"
        # done
        # ${MKDIR_BIN} -p "${realpath}/usr/lib/ldscripts"
        # for file in $(${FIND_BIN} ${GOLD}/${TARGET_TRIPPLE}/lib/ldscripts -type f); do
        #     ${INSTALL_BIN} -v "${file}" "${realpath}/usr/lib/ldscripts" >> "${BBS_LOG}" 2>> "${BBS_LOG}"
        # done
        # permnote "Golden linker merged with current software base"

        cd /var/.cache
        # destroy a snapshot if already exists
        ${ZFS_BIN} destroy "${DEFAULT_ZPOOL:-zroot}${realpath}@v${A_VERSION}" 2>/dev/null || true
        ${ZFS_BIN} snapshot "${DEFAULT_ZPOOL:-zroot}${realpath}@v${A_VERSION}"
        ${ZFS_BIN} send -D -L -e -p -v "${DEFAULT_ZPOOL:-zroot}${realpath}@v${A_VERSION}" | ${XZ_BIN} --threads=${CPUS} > ${BASE_SNAPSHOT}${DEFAULT_ARCHIVE_EXT} 2>> "${BBS_LOG}"
        if [ "$?" = "0" ]; then
            permnote "Snapshot successfully sent."
            if [ -f "/.build-host" ]; then
                permnote "Detected built-host type, removing version snapshot: ${DEFAULT_ZPOOL:-zroot}${realpath}@v${A_VERSION}.."
                ${ZFS_BIN} destroy "${DEFAULT_ZPOOL:-zroot}${realpath}@v${A_VERSION}"
            fi
        else
            error "Something went wrong while sending snapshot!"
        fi

        ${CHMOD_BIN} a+r ${BASE_SNAPSHOT}${DEFAULT_ARCHIVE_EXT} || \
            error "Snapshot should be readable by everyone."

        permnote "Uploading Jail snapshot: ${BASE_SNAPSHOT}"
        ${CHMOD_BIN} 600 ~/.ssh/* >/dev/null 2>&1
        ${SCP_BIN} \
            -o UserKnownHostsFile=/dev/null \
            -o StrictHostKeyChecking=no \
            ${BASE_SNAPSHOT}${DEFAULT_ARCHIVE_EXT} \
            ${DESTINATION} 2>> ${BBS_LOG} && \
            permnote "Uploaded successfully."

        if [ "$?" = "0" ]; then
            permnote "Finished successfully. Checking latest version on remote destination.."
            ${SSH_BIN} \
                -o UserKnownHostsFile=/dev/null \
                -o StrictHostKeyChecking=no \
                dmilith@served.verknowsys.com \
                "${GREP_BIN} -R '${A_VERSION}' /Users/dmilith/ServeD/Web/version-latest >/dev/null 2>&1 || \
                 echo '${A_VERSION}' > /Users/dmilith/ServeD/Web/version-latest" 2>> ${BBS_LOG} && \
                permnote "Remote version file updated successfully with version: ${A_VERSION}"
        else
            error "Something went wrong while uploading Jails base. Launch args: '${LAUNCH_ARGS}';"
        fi
    }


    clean_before
    compile_jails
}

