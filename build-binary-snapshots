#!/usr/bin/env zsh
# ZSH is required
#
# 2014-09-02 13:11:55
# blame: @dmilith

set -e

readonly CONF_FILE="/etc/sofin.conf.sh"
if [ -e "${CONF_FILE}" ]; then
    . "${CONF_FILE}"
    validate_env
else
    echo "FATAL: No configuration file found: ${CONF_FILE}. Sofin isn't installed properly."
    exit 1
fi


readonly NAME="$1"
if [ "${NAME}" = "" ]; then
    error "No name specified!"
fi

readonly A_VERSION="$2"
if [ "${A_VERSION}" = "" ]; then
    error "No version specified!"
fi

readonly OS_VER="$3"
if [ "${OS_VER}" = "" ]; then
    error "No OS version specified!"
fi

readonly DESTINATION="$4"
if [ "${DESTINATION}" = "" ]; then
    error "No destination path specified!"
fi

readonly ARCH="$5"
if [ "${ARCH}" = "" ]; then
    error "No architecture specified!"
fi

readonly BBS_LOG="/var/log/messages"


clean_before () {
    cd "/Jails/Shared/FreeBSD-${OS_VER}-${ARCH}"
    for unnec in /etc /tmp /dev /mnt /media /proc /COPYRIGHT /sys /var/mail /usr/home /var/mail /var/tmp /.profile /rescue /root; do
        ${RM_BIN} -rf ".${unnec}" && \
        debug "Removed dir: .${unnec}"
    done
}


compile_jails () {
    ${MKDIR_BIN} -p /var/.cache
    BASE_SNAPSHOT="${NAME}-${OS_VER}-v${A_VERSION}-${ARCH}"
    note "Compiling snapshot: ${BASE_SNAPSHOT}"
    realpath="/Jails/Shared/FreeBSD-${OS_VER}-${ARCH}"

    # Golden linker support:
    if [ -f "/Software/Gold/lib/LLVMgold.so" ]; then
        note "Syncing golden linker.."
        set -e
        for file in /Software/Gold/lib/LLVMgold.so /Software/Gold/lib/libLTO.so; do
            ${INSTALL_BIN} -v "${file}" "${realpath}/usr/lib" >> "${BBS_LOG}" 2>> "${BBS_LOG}"
        done
        for file in $(${FIND_BIN} /Software/Gold/x86_64-unknown-freebsd11.0/bin -type f); do
            ${INSTALL_BIN} -v "${file}" "${realpath}/usr/bin" >> "${BBS_LOG}" 2>> "${BBS_LOG}"
        done
        ${MKDIR_BIN} -p "${realpath}/usr/lib/ldscripts"
        for file in $(${FIND_BIN} /Software/Gold/x86_64-unknown-freebsd11.0/lib/ldscripts -type f); do
            ${INSTALL_BIN} -v "${file}" "${realpath}/usr/lib/ldscripts" >> "${BBS_LOG}" 2>> "${BBS_LOG}"
        done
        note "Linker installed in destination system"
    fi

    cd /var/.cache
    debug "RR: ${TAR_BIN} -vcJ --use-compress-program=\"${XZ_BIN} --threads=${CPUS}\" -f ${BASE_SNAPSHOT}${DEFAULT_ARCHIVE_EXT} \"${realpath}\""
    time ${TAR_BIN} -cJ --use-compress-program="${XZ_BIN} --threads=${CPUS}" -f ${BASE_SNAPSHOT}${DEFAULT_ARCHIVE_EXT} ${realpath} 2>> ${BBS_LOG}
    if [ "$?" = "0" ]; then
        note "Compiled successfully."
    else
        error "Something went wrong while compiling snapshot!"
    fi

    ${CHMOD_BIN} a+r ${BASE_SNAPSHOT}${DEFAULT_ARCHIVE_EXT} || \
    error "Snapshot should be readable by everyone. But chmod failed."

    note "Uploading Jail snapshot: ${BASE_SNAPSHOT}"
    ${SCP_BIN} \
        -o UserKnownHostsFile=/dev/null \
        -o StrictHostKeyChecking=no \
        ${BASE_SNAPSHOT}${DEFAULT_ARCHIVE_EXT} \
        ${DESTINATION} 2>> ${BBS_LOG} && \
        note "Uploaded successfully."

    if [ "$?" = "0" ]; then
        note "Finished successfully. Checking latest version on remote destination.."
        ${SSH_BIN} \
            -o UserKnownHostsFile=/dev/null \
            -o StrictHostKeyChecking=no \
            dmilith@served.verknowsys.com \
            "grep -R '${A_VERSION}' /Users/dmilith/ServeD/Web/version-latest >/dev/null 2>&1 || \
             echo '${A_VERSION}' > /Users/dmilith/ServeD/Web/version-latest" 2>> ${BBS_LOG} && \
            note "Remote version updated."

    else
        error "Something went wrong while uploading Jails base."
    fi
}


clean_before
compile_jails
