#!/bin/sh
#
# @author Daniel (dmilith) Dettaff
#

reset

# tunables:
export PATH="/bin:/usr/bin:/sbin:/usr/sbin"
SYSTEM_VERSION="12" # the default
ZPOOL="zroot"
SERVED_REPO="/Projects/ServeD-OS"
CACERT_SOURCE="http://curl.haxx.se/ca/cacert.pem"
CACERT_SOURCE_ALT="http://raw.githubusercontent.com/bagder/ca-bundle/master/ca-bundle.crt"
DEFAULT_ZFS_STREAM_EXT=".zfsx"

error_char="✘"
SERVEDOS_GIT_ORIGIN="https://github.com/VerKnowSys/ServeD-OS.git"
DEFAULT_SOFIN_REPOSITORY="https://github.com/VerKnowSys/sofin.git"
BASE="ServeD-OS-Base"
BASE_SOURCE="http://served.verknowsys.com/"
VKS_KERNEL="/boot/verknowsys"
CACHE_DIR="/var/.cache"

. build.env


# TIMESTAMP="$(${DATE_BIN} +%s 2>/dev/null)"
# ARCH="$(${UNAME_BIN} -m 2>/dev/null)"
# UNAME_OS="$(${UNAME_BIN} -s 2>/dev/null)"
# OS_TRIPPLE="${SYSTEM_VERSION}-${ORIGIN}-${ARCH}"
# VERSION="0.11.88"


# host side preparation:
# echo "Host number: ${_host_number}"
echo "Preparing dirs…"
${SSH_BIN} root@xh1 \
    "${MKDIR_BIN} -p ${CACHE_DIR} /User/.ssh"

echo 'Installing ED25519 SSH key…'
${SCP_BIN} \
    "${HOME}/.ssh/id_ed25519.pub" \
    "root@xh1:/User/.ssh/authorized_keys"

echo "Installing default cert.pem from: ${CACERT_SOURCE}…"
${SSH_BIN} root@xh1 \
    "${FETCH_BIN} \
    --no-verify-peer \
    ${CACERT_SOURCE} \
    -o /etc/ssl/cert.pem"

for _ds in var/mail usr/src usr/home usr/ports var/audit; do
    ${SSH_BIN} root@xh1 \
        "${ZFS_BIN} destroy -r ${ZPOOL}/${_ds}" 2>/dev/null
done


echo "Release base: ${SYSTEM_VERSION}…"
for _dataset_origin in Software Services User; do

    ${SSH_BIN} root@xh1 "${ZFS_BIN} list ${ZPOOL}/${_dataset_origin}" >/dev/null 2>&1
    if [ "${?}" != "0" ]; then
        echo "Creating origin base: ${ZPOOL}/${_dataset_origin}"
        ${SSH_BIN} root@xh1 \
            "${ZFS_BIN} create \
            -o mountpoint=none \
            -o casesensitivity=sensitive \
            -o readonly=on \
            -o utf8only=on \
            -o devices=off \
            -o dedup=off \
            -o checksum=fletcher4 \
            -o atime=off \
            -o aclmode=discard \
            -o exec=off \
            -o canmount=off \
            -o compression=lz4 \
            ${ZPOOL}/${_dataset_origin}"
    fi

    ${SSH_BIN} root@xh1 "${ZFS_BIN} list ${ZPOOL}/${_dataset_origin}/root" >/dev/null 2>&1
    if [ "${?}" != "0" ]; then
        echo "Creating ${ZPOOL}/${_dataset_origin} origin"
        ${SSH_BIN} root@xh1 \
            "${ZFS_BIN} create \
            -o readonly=off \
            -o canmount=on \
            -o exec=on \
            -o mountpoint=/${_dataset_origin} \
            ${ZPOOL}/${_dataset_origin}/root"

        _software_origin_file="${_dataset_origin}-${ORIGIN}${DEFAULT_ZFS_STREAM_EXT}"
        echo "Storing origin snapshot to file: ${_software_origin_file}"
        ${SSH_BIN} root@xh1 \
            "${ZFS_BIN} snapshot \
            ${ZPOOL}/${_dataset_origin}/root@${ORIGIN}"

        echo "Send origin to file: ${_software_origin_file}"
        ${SSH_BIN} root@xh1 \
            "${ZFS_BIN} send \
            -D -L -e -p -v \
            ${ZPOOL}/${_dataset_origin}/root@${ORIGIN} \
            | ${XZ_BIN} --threads=4 > ${CACHE_DIR}/${_software_origin_file}"

        # echo "Push origin to remote"
        ${MKDIR_BIN} -p "./Origins/${SYSTEM_VERSION}"
        ${SCP_BIN} \
            root@xh1:${CACHE_DIR}/${_software_origin_file} \
            Origins/${SYSTEM_VERSION}/
    fi
done

echo "Configuring base RC system"
${SCP_BIN} \
    "etc/rc.build.conf" \
    "root@xh1:/etc/rc.conf"

${SCP_BIN} \
    "etc/loader.build.conf" \
    "root@xh1:/boot/loader.conf"

echo "Creating projects archive…"
${TAR_BIN} -cJf ".archive-base-projects.tar.xz" \
    /Projects/ServeD-OS \
    /Projects/Sofin

echo "Sending projects archive…"
${SCP_BIN} \
    ".archive-base-projects.tar.xz" \
    "root@xh1:${CACHE_DIR}/"

echo "Cleaning local archive…"
${RM_BIN} -f \
    ".archive-base-projects.tar.xz"

echo "Setting HOME to /User, Zsh as default shell, installing base software"
${SSH_BIN} root@xh1 \
    "${PW_BIN} user mod root -d /User; \
    ${SED_BIN} -i '' -e 's|^/bin/tcsh|${DEFAULT_SHELL}|g' /etc/shells; \
    ${CHSH_BIN} -s ${DEFAULT_SHELL} root; \
    ${RM_BIN} -rf /root; \
    ${TAR_BIN} xfJ ${CACHE_DIR}/.archive-base-projects.tar.xz --directory / 2>/dev/null; \
    cd /Projects/Sofin; \
    bin/install; \
    echo LANG=\"en_GB.UTF-8\" > /User/.zshenv; \
    echo LANGUAGE=\"en_GB.UTF-8\" >> /User/.zshenv; \
    cd /Projects; \
    ${GIT_BIN} clone https://github.com/vermaden/beadm.git 2>/dev/null; \
    ${GZIP_BIN} beadm/beadm.1 2>/dev/null; \
    ${INSTALL_BIN} -v beadm/beadm.1.gz /usr/share/man/man1/; 2>/dev/null \
    ${INSTALL_BIN} -v beadm/beadm /usr/sbin/beadm; \
    cd ${SERVED_REPO}; \
    ${CP_BIN} -fr shell/ /etc/zsh; \
    ${LN_BIN} -fvs /etc/zsh/zshenv /etc/zshenv; \
    ${LN_BIN} -fvs /etc/zsh/zshrc /etc/zshrc; \
    touch /.build-host; \
    printf 'Host *.verknowsys.com verknowsys.com\nPort 60022\n\n' > /User/.ssh/config; \
    "

echo "Done"
exit
