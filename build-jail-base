#!/bin/sh


build_base () {
    # main()
    ${RM_BIN} -f ${LOG_OUTPUT}
    ${TOUCH_BIN} ${LOG_OUTPUT}
    echo "Process started for OS version: ${SYSTEM_VERSION}, architecture: ${ARCH}, timestamp: @${TIMESTAMP}" >> ${LOG_OUTPUT}
    permnote "Process started for OS version: ${SYSTEM_VERSION}, architecture: ${ARCH}, timestamp: @${TIMESTAMP}"

    cd /var
    if [ ! -d "${SYSTEM_VERSION}" ]; then
        # svn co http://svn0.eu.FreeBSD.org/base/releng/${SYSTEM_VERSION} ${SYSTEM_VERSION}
        ${GIT_BIN} clone --single-branch --branch ${CURRENT_BRANCH} ${MAIN_REPOSITORY} ${SYSTEM_VERSION} # GIT_SSL_NO_VERIFY=true
        cd ${SYSTEM_VERSION}
        ${GIT_BIN} checkout -B ${CURRENT_BRANCH} > /dev/null 2>> ${LOG_OUTPUT} || true # GIT_SSL_NO_VERIFY=true
    else
        cd ${SYSTEM_VERSION}
        ${GIT_BIN} checkout ${CURRENT_BRANCH} > /dev/null 2>> ${LOG_OUTPUT} # GIT_SSL_NO_VERIFY=true
        ${GIT_BIN} pull origin ${CURRENT_BRANCH} # GIT_SSL_NO_VERIFY=true
        permnote "Working on branch: $(${GIT_BIN} branch)"
    fi

    permnote "Setting up src.conf"
    ${RM_BIN} -f /etc/src.conf
    ${INSTALL_BIN} -v ${SERVED_REPO}/etc/src.conf /etc/

    permnote "Syncing sources to src"
    ${TIME_BIN} ${SERVED_REPO}${RSYNC_BIN} -l -p -E -A -X -o -g -t -r --delete /var/${SYSTEM_VERSION}/ /usr/src/

    cd /usr/src || exit 6

    DESTBASE="${SHARED_DIR}/${SYSTEM_NAME}-${SYSTEM_VERSION}-${ARCH}"
    permnote "Preparing kernel configuration for destbase: ${DESTBASE}"
    ${GIT_BIN} reset --hard >> ${LOG_OUTPUT} # GIT_SSL_NO_VERIFY=true
    ${RM_BIN} -fv sys/*/conf/VERKNOWSYS >> ${LOG_OUTPUT} 2>> ${LOG_OUTPUT}

    echo "${ARCH} mode"
    case "${ARCH}" in
        arm|arm64)
            ${CP_BIN} -v \
                ${SERVED_REPO}/kernel/VERKNOWSYS-${SYSTEM_VERSION}-RPI2 \
                sys/${ARCH}/conf/VERKNOWSYS \
                >> ${LOG_OUTPUT} 2>> ${LOG_OUTPUT}
            ;;

        x86_64|amd64)
            # NOTE: overriding x86_64 for architecture used by build system
            ARCH="amd64"
            DESTBASE="${SHARED_DIR}/${SYSTEM_NAME}-${SYSTEM_VERSION}-${ARCH}"

            ${CP_BIN} -v \
                ${SERVED_REPO}/kernel/VERKNOWSYS-${SYSTEM_VERSION} \
                sys/${ARCH}/conf/VERKNOWSYS \
                >> ${LOG_OUTPUT} 2>> ${LOG_OUTPUT}
            ;;

    esac

    # permnote "Patching sources" # (exporting libucl, libxo, adding svdsysup to init apps)"
    # # spawn svdinit first:
    # ${SED_BIN} -i '' -e 's#"/sbin/init:/sbin/oinit:/sbin/init.bak:/rescue/init"#"/sbin/svdinit:/sbin/init:/sbin/oinit:/sbin/init.bak:/rescue/init"#' sys/kern/init_main.c

    # # export libucl:
    permnote "Exporting UCL as regular OS library"
    ${SED_BIN} -i '' -e 's/PRIVATELIB=.*$//' lib/libucl/Makefile
    ${PATCH_BIN} -p0 -f < ${SERVED_REPO}/src/patches/export_ucl.patch >> ${LOG_OUTPUT} 2>> ${LOG_OUTPUT}

    if [ -z "${DONT_BUILD_WORLD}" ]; then
        permnote "Building world"
        ${MAKE_BIN} -s buildworld \
            -j${PARALLEL_JOBS} \
            DESTDIR=${DESTBASE} \
            TARGET_ARCH=${ARCH_SUBTYPE} \
            DEBUG= \
            TARGET= \
            >> ${LOG_OUTPUT} 2>> ${LOG_OUTPUT} || exit 11
    fi

    permnote "Building kernel"
    ${MAKE_BIN} -s buildkernel \
        -j${PARALLEL_JOBS} \
        DESTDIR=${DESTBASE} \
        TARGET_ARCH=${ARCH_SUBTYPE} \
        TARGET= \
        DEBUG= \
        >> ${LOG_OUTPUT} 2>> ${LOG_OUTPUT} || exit 10

    # permnote "Wiping out previous world"
    # ${RM_BIN} -rf ${DESTBASE}/* >> ${LOG_OUTPUT}  2>> ${LOG_OUTPUT}

    # permnote "Creating snapshot of destbase: ${DESTBASE}@${TIMESTAMP}_begin"
    # ${ZFS_BIN} snapshot ${DEFAULT_ZPOOL}${DESTBASE}@${TIMESTAMP}_begin

    permnote "Installing kernel"
    ${MAKE_BIN} -s installkernel \
        DESTDIR=${DESTBASE} \
        TARGET_ARCH=${ARCH_SUBTYPE} \
        TARGET= \
        DEBUG= \
        >> ${LOG_OUTPUT} 2>> ${LOG_OUTPUT} || exit 12

    if [ -z "${DONT_BUILD_WORLD}" ]; then
        ${RM_BIN} -rf /var/tmp/temproot

        permnote "Merging Pre-buildworld configuration"
        ${MERGEMASTER_BIN} -p -a >> ${LOG_OUTPUT} 2>> ${LOG_OUTPUT}

        permnote "Installing world"
        ${MAKE_BIN} -s installworld DEBUG= DESTDIR=${DESTBASE} TARGET= TARGET_ARCH=${ARCH_SUBTYPE} >> ${LOG_OUTPUT}  2>> ${LOG_OUTPUT}

        permnote "Merging configuration in: ${DESTBASE}"
        ${MERGEMASTER_BIN} -P -a -D${DESTBASE} >> ${LOG_OUTPUT} 2>> ${LOG_OUTPUT}

        permnote "Deleting old dirs, files and libs"
        ${YES_BIN} | ${MAKE_BIN} delete-old delete-old-libs DESTDIR=${DESTBASE} TARGET= TARGET_ARCH=${ARCH_SUBTYPE} >> ${LOG_OUTPUT}  2>> ${LOG_OUTPUT} || true
    fi

    permnote "Cleaning up"
    ${MAKE_BIN} clean >> ${LOG_OUTPUT} 2>> ${LOG_OUTPUT}

    # permnote "Snapshotting after installation"
    # ${ZFS_BIN} snapshot ${DEFAULT_ZPOOL}${DESTBASE}@${TIMESTAMP}_end

    # permnote "Storing fs diff"
    # ${MKDIR_BIN} -p ${DIFFS_DIR} > /dev/null 2>> ${LOG_OUTPUT}
    # ${ZFS_BIN} send -i ${DEFAULT_ZPOOL}${DESTBASE}@${TIMESTAMP}_begin ${DEFAULT_ZPOOL}${DESTBASE}@${TIMESTAMP}_end > ${DIFFS_DIR}/build-${TIMESTAMP}.zfs

    # set +e

    # permnote "Stopping any running jails"
    # for node in $(${GVR_BIN} list | ${AWK_BIN} '{print $1;}'); do
    #     ${GVR_BIN} stop ${node} || true
    # done

    echo "Process: ${0} ${*}, finished @${TIMESTAMP}" >> ${LOG_OUTPUT}
    permnote "Process: ${0} ${*}, finished @${TIMESTAMP}"
}
